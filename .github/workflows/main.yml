# Note: AI Generated
name: Build nc

on:
  push:
    branches:
      - main
      - release-branch
  pull_request:
    branches:
      - main
      - release-branch

permissions: write-all

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '23'

      - name: Install pnpm
        run: npm i -g pnpm

      - name: Install dependencies
        run: pnpm i --no-frozen-lockfile

      - name: Build the project
        run: node ./scripts/build.swc.mjs --build-minify=true --release-branch="r${{ github.run_number }}"
        env:
          NODE_ENV: production
          RELEASE_BRANCH: ${{ github.ref_name }}
          BUILD_MINIFY: true
          DEV: false

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload neocord.min.js
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/neocord.min.js
          asset_name: neocord.min.js
          asset_content_type: application/javascript
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload neocord.js
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/neocord.js
          asset_name: neocord.js
          asset_content_type: application/javascript
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
